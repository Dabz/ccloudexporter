version: "3"
services:
  # Sample Go application producing counter metrics.
  ccloud_exporter:
    image: dabz/ccloudexporter
    ports:
      - '2112:2112'
    hostname: ccloud_exporter
    container_name: ccloud_exporter
    environment:
      CCLOUD_API_KEY: <<CCLOUD_API_KEY>>
      CCLOUD_API_SECRET: <<CCLOUD_API_SECRET>>
      CCLOUD_CLUSTER: <<CCLOUD_CLUSTER>> #lkc-XXXX
  # Import kafka-lag 
  kafka-lag-exporter:
    image: lightbend/kafka-lag-exporter:0.5.5
    hostname: kafka-lag-exporter 
    container_name: kafka-lag-exporter 
    restart: always
    ports:
     - 9999:9999
    volumes:
     - ./kafka-lag-exporter/application.conf:/opt/docker/conf/application.conf
     - ./kafka-lag-exporter/logback.xml:/opt/docker/conf/logback.xml

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # Splunk Enterprise server:
  splunk:
    image: splunk/splunk:latest
    container_name: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_HEC_TOKEN=00000000-0000-0000-0000-0000000000000
      - SPLUNK_PASSWORD=changeme
    ports:
      - 18000:8000
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000']
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - ./splunk.yml:/tmp/defaults/default.yml
      - /opt/splunk/var
      - /opt/splunk/etc
  # OpenTelemetry Collector
  otelcollector:
    image: quay.io/signalfx/splunk-otel-collector:0.29.0
    container_name: otelcollector
    command: ["--config=/etc/otel-collector-config.yml", "--log-level=DEBUG"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    depends_on:
      - splunk
      - ccloud_exporter
      - kafka-lag-exporter
